{
  "openapi": "3.0.0",
  "info": {
    "title": "Yummy API",
    "description": "API documentation for team pet project \"Yummy\"\n",
    "contact": {
      "name": "Oleksandr Kochenko",
      "url": "https://oleksandrkochenko.github.io/CV/",
      "email": "kochenko.fop@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more on my GitHub",
    "url": "https://github.com/OleksandrKochenko"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/KOCHENKOFOP/YummyApi/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://yummy-pet-project.onrender.com"
    },
    {
      "url": "http://localhost:4000/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "User authorisation"
    },
    {
      "name": "API / Categories",
      "description": "Categories operations"
    },
    {
      "name": "API / Recipes",
      "description": "Recipes operations"
    },
    {
      "name": "API / Ingredients",
      "description": "Ingredients operations"
    },
    {
      "name": "API / Shoping List",
      "description": "Shoping list operations"
    },
    {
      "name": "User",
      "description": "User update operations (Under construction)"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Add a new user",
        "operationId": "signup",
        "requestBody": {
          "$ref": "#/components/requestBodies/Register"
        },
        "responses": {
          "201": {
            "description": "User added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidBody"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - User already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "signin",
        "requestBody": {
          "$ref": "#/components/requestBodies/Login"
        },
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidBody"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Email not verified \\ Wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrongCredentials"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Current user",
        "operationId": "curent",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/signout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/categories": {
      "get": {
        "tags": [
          "API / Categories"
        ],
        "summary": "Fetch categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "Categories array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/front-page": {
      "get": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Fetch front page recipes",
        "operationId": "getFrontPage",
        "responses": {
          "200": {
            "description": "Front page recipes data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FrontPage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes": {
      "get": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Page of recipes by at least one of params - category, title or ingredient",
        "operationId": "getRecipesByParams",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "title value that need to be considered for filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "cheesecake",
                "chicken",
                "soup",
                "tart"
              ]
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "category value that need to be considered for filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "Beef",
                "Chicken",
                "Dessert",
                "Vegetarian"
              ]
            }
          },
          {
            "name": "ingredient",
            "in": "query",
            "description": "ingredient id that need to be considered for filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "640c2dd963a319ea671e365b",
                "640c2dd963a319ea671e3666",
                "640c2dd963a319ea671e368a"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of recipes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipesPage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Add new recipe",
        "operationId": "addNewRecipe",
        "requestBody": {
          "description": "New recipe object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddNewRecipeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Page of recipes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/recipes/{id}": {
      "get": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Fetch recipe by id",
        "description": "Returns a single recipe",
        "operationId": "getRecipeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of recipe to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "6462a6cd4c3d0ddd28897f8e",
                "6462a8f74c3d0ddd28897fba",
                "6462a8f74c3d0ddd28897fb8"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single recipe data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/recipes/my-recipes": {
      "get": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Fetch user's own recipes",
        "description": "Returns recipes added by user",
        "operationId": "getMyRecipes",
        "responses": {
          "200": {
            "description": "User's own recipes page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipesPage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/recipes/favorites": {
      "get": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Fetch favorite recipes of user",
        "description": "Returns recipes marked as favorite by user",
        "operationId": "getFavoriteRecipes",
        "responses": {
          "200": {
            "description": "User's favorite recipes page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipesPage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/recipes/favorites/{id}": {
      "put": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Remove recipe from user's list of favorite",
        "operationId": "removeFavoriteRecipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "recipe id to remove from favorites",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "6462a8f74c3d0ddd28897fc9",
                "6462a8f74c3d0ddd28897fba",
                "652438cbd09d5e8e175b7015"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recipe removed from favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "API / Recipes"
        ],
        "summary": "Add recipe to user's list of favorite",
        "operationId": "addFavoriteRecipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "recipe id to add to favorites",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "6462a8f74c3d0ddd28897fc9",
                "6462a8f74c3d0ddd28897fba",
                "652438cbd09d5e8e175b7015"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recipe added to favorite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "409": {
            "description": "Already added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/ingredients": {
      "get": {
        "tags": [
          "API / Ingredients"
        ],
        "summary": "Fetch ingredients",
        "operationId": "getIngredients",
        "responses": {
          "200": {
            "description": "Ingredients array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IngredientItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "description": "Update user data (name or password)",
        "operationId": "ypdateUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "RegistrationRequest": {
        "required": [
          "email",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "user name",
            "example": "Test User"
          },
          "email": {
            "type": "string",
            "description": "user email",
            "format": "email",
            "example": "test.user@mail.com"
          },
          "password": {
            "minLength": 4,
            "type": "string",
            "description": "user password",
            "example": "qwer1234"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "user name",
            "example": "Test User"
          },
          "email": {
            "type": "string",
            "description": "user email",
            "format": "email",
            "example": "test.user@mail.com"
          },
          "avatarURL": {
            "type": "string",
            "description": "user avatar",
            "example": "https://eu.ui-avatars.com/api/?name=TEST+3&size=250&background=A1C08E&rounded=true"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "user email",
            "format": "email",
            "example": "test.user@mail.com"
          },
          "password": {
            "minLength": 4,
            "type": "string",
            "description": "user password",
            "example": "qwer1234"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "name": {
            "type": "string",
            "description": "user name",
            "example": "Test User"
          },
          "email": {
            "type": "string",
            "description": "user email",
            "format": "email",
            "example": "test.user@mail.com"
          },
          "avatarURL": {
            "type": "string",
            "description": "user avatar",
            "example": "https://eu.ui-avatars.com/api/?name=TEST+3&size=250&background=A1C08E&rounded=true"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "user name",
            "example": "Test User"
          },
          "email": {
            "type": "string",
            "description": "user email",
            "format": "email",
            "example": "test.user@mail.com"
          },
          "avatarURL": {
            "type": "string",
            "description": "user avatar",
            "example": "https://eu.ui-avatars.com/api/?name=TEST+3&size=250&background=A1C08E&rounded=true"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "User loged out",
            "example": "Logout success"
          }
        }
      },
      "AddNewRecipeRequest": {
        "required": [
          "category",
          "description",
          "ingredients",
          "instructions",
          "time",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of recipe",
            "example": "New Recipe"
          },
          "category": {
            "type": "string",
            "description": "Category of recipe",
            "example": "Seafood"
          },
          "description": {
            "type": "string",
            "description": "Short description of recipe",
            "example": "Very good description for a new recipe"
          },
          "instructions": {
            "type": "string",
            "description": "Instruction of recipe",
            "example": "This is a placeholder of an instruction for a new recipe"
          },
          "time": {
            "type": "string",
            "description": "Time of recipe preparation",
            "example": "30"
          },
          "ingredients": {
            "type": "array",
            "description": "array of ingredients id and measures",
            "items": {
              "$ref": "#/components/schemas/AddNewRecipeRequest_ingredients"
            }
          }
        }
      },
      "CategoryItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "category id",
            "example": "6462a6cd4c3d0ddd28897f8e"
          },
          "name": {
            "type": "string",
            "description": "category name",
            "example": "Beef"
          }
        }
      },
      "RecipeItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "recipe id",
            "example": "6462a6cd4c3d0ddd28897f8e"
          },
          "title": {
            "type": "string",
            "description": "recipe title",
            "example": "Beef Stroganoff"
          },
          "category": {
            "type": "string",
            "description": "recipe category",
            "example": "Beef"
          },
          "area": {
            "type": "string",
            "description": "recipe area",
            "example": "Britain"
          },
          "instructions": {
            "type": "string",
            "description": "recipe title",
            "example": "Take a beef, cut it and fry it on a pan."
          },
          "description": {
            "type": "string",
            "description": "recipe description",
            "example": "Beef Stroganoff is a famous recipe of fried beef"
          },
          "thumb": {
            "type": "string",
            "description": "recipe preview URL",
            "example": "https://www.themealdb.com/images/media/meals/2dsltq1560461468.jpg"
          },
          "preview": {
            "type": "string",
            "description": "recipe image URL",
            "example": "https://res.cloudinary.com/ddbvbv5sp/image/upload/v1678561360/s2xedheis7fera3ldvsb.jpg"
          },
          "time": {
            "type": "string",
            "description": "time of preparing",
            "example": "35"
          },
          "youtube": {
            "type": "string",
            "description": "recipe video URL",
            "example": "https://www.youtube.com/watch?v=C5n1fN8TGHs"
          },
          "tags": {
            "type": "array",
            "description": "recipe video URL",
            "items": {
              "type": "string",
              "description": "some tag",
              "example": "[\"Meat\",\"Beef\"]"
            }
          },
          "ingredients": {
            "type": "array",
            "description": "recipe ingredients",
            "items": {
              "$ref": "#/components/schemas/RecipeItem_ingredients"
            }
          }
        }
      },
      "IngredientItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ingredient id",
            "example": "640c2dd963a319ea671e3672"
          },
          "name": {
            "type": "string",
            "description": "ingredient name",
            "example": "Black Pepper"
          },
          "desc": {
            "type": "string",
            "description": "ingredient description",
            "example": "Black pepper (Piper nigrum) is a flowering vine in the family Piperaceae, cultivated for its fruit, known as a peppercorn, which is usually dried and used as a spice and seasoning."
          },
          "img": {
            "type": "string",
            "description": "ingredient image URL",
            "example": "https://res.cloudinary.com/ddbvbv5sp/image/upload/v1678564215/mj1ottbkds56ug62ptkz.png"
          }
        }
      },
      "FrontPage": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CategoryItem"
          },
          "recipes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeItem"
            }
          }
        }
      },
      "RecipesPage": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 12
          },
          "recipes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeItem"
            }
          }
        }
      },
      "InvalidBody": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Invalid request body",
            "example": "missing required ... field"
          }
        }
      },
      "Conflict": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Email already in use",
            "example": "Email already in use"
          }
        }
      },
      "WrongCredentials": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Email or password is wrong",
            "example": "Email or password is wrong"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Unauthorized",
            "example": "Unauthorized"
          }
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Not Found",
            "example": "Not Found"
          }
        }
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Server Error",
            "example": "Server Error"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "success",
            "example": "Recipe with id ... removed from favorites of user with id ..."
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "success",
            "example": "Recipe with id ... added to favorites by user with id ..."
          }
        }
      },
      "inline_response_409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Recipe already in favorites",
            "example": "Recipe with id ... already in favorites"
          }
        }
      },
      "AddNewRecipeRequest_ingredients": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "imgredient id",
            "example": "640c2dd963a319ea671e3669"
          },
          "measure": {
            "type": "string",
            "description": "imgredient measure",
            "example": "250 g"
          }
        }
      },
      "RecipeItem_ingredients": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ingredient id",
            "example": "640c2dd963a319ea671e3680"
          },
          "measure": {
            "type": "string",
            "description": "ingredient measure",
            "example": "2 tbsp"
          }
        },
        "description": "some ingredient"
      }
    },
    "requestBodies": {
      "Register": {
        "description": "Registration data object",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegistrationRequest"
            }
          }
        },
        "required": true
      },
      "Login": {
        "description": "Login data object",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginRequest"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}